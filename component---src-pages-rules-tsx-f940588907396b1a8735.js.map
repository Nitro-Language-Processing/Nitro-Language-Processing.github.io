{"version":3,"file":"component---src-pages-rules-tsx-f940588907396b1a8735.js","mappings":"8OACWA,EAAK,0BACLC,EAAK,0B,UCkChB,MA3BoCC,IAAkB,IAAjB,QAAEC,GAAS,EAC9C,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBACRC,EAAWF,EAAE,WAAY,CAAEG,eAAe,IAEhD,OACEC,EAAAA,EAAAA,MAAAA,MAAAA,CAAKC,UAAW,OAAQC,GAAI,QAAQ,WAClCC,EAAAA,EAAAA,KAAAA,KAAAA,CAAIF,UAAS,mCAA0B,SAAEL,EAAE,YAC3CO,EAAAA,EAAAA,KAAAA,KAAAA,CAAIF,UAAW,WAAW,SAAEN,KAE5BQ,EAAAA,EAAAA,KAAAA,KAAAA,CAAIF,UAAcG,mCAA+B,SAC9CN,EAASO,KAAI,CAACC,EAAMC,KACnBP,EAAAA,EAAAA,MAAAA,KAAAA,CAAgCC,UAAWG,EAAU,UAClDE,EAAKE,OACNL,EAAAA,EAAAA,KAAAA,KAAAA,CAAIF,UAAWG,EAAU,SACtBE,EAAKG,QAAQJ,KAAI,CAACI,EAAiBC,KAClCP,EAAAA,EAAAA,KAAAA,KAAAA,CAAyCF,UAAWG,EAAU,SAC3DK,GADM,cAAgBF,EAAQG,SAJ9B,cAAgBH,SAYzB,ECXV,MAZuCb,IAAkB,IAAjB,SAAEiB,GAAU,EAClD,MAAM,EAAEf,IAAMC,EAAAA,EAAAA,kBAEd,OACEG,EAAAA,EAAAA,MAACY,EAAAA,EAAM,CAAAC,SAAAA,EACLV,EAAAA,EAAAA,KAACW,EAAAA,EAAG,CAACN,MAAOZ,EAAE,SAAUmB,SAAUJ,EAASI,YAE3CZ,EAAAA,EAAAA,KAACa,EAAK,CAACrB,QAAS,SACT,C","sources":["webpack://nitro-language-processing-hackathon/./src/components/rules.module.css","webpack://nitro-language-processing-hackathon/./src/components/rules.tsx","webpack://nitro-language-processing-hackathon/./src/pages/rules.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var li = \"rules-module--li--87734\";\nexport var ol = \"rules-module--ol--84efb\";\nexport var ruleList = \"rules-module--ruleList--cce79\";\nexport var title = \"rules-module--title--a4de7\";","import { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport { Edition } from \"../data\";\nimport * as styles from \"./rules.module.css\";\nimport React from \"react\";\n\ntype RulesProps = {\n  edition: Edition;\n};\n\nconst Rules: React.FC<RulesProps> = ({ edition }) => {\n  const { t } = useTranslation();\n  const sections = t(\"sections\", { returnObjects: true }) as any[];\n\n  return (\n    <div className={\"page\"} id={\"rules\"}>\n      <h1 className={`title ${styles.title}`}>{t(\"title\")}</h1>\n      <h2 className={\"subtitle\"}>{edition}</h2>\n\n      <ol className={`${styles.ol} ${styles.ruleList}`}>\n        {sections.map((item, index) => (\n          <li key={\"ruleSection\" + index} className={styles.li}>\n            {item.title}\n            <ol className={styles.ol}>\n              {item.details.map((details: string, index2: number) => (\n                <li key={\"ruleDetails\" + index + index2} className={styles.li}>\n                  {details}\n                </li>\n              ))}\n            </ol>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Rules;\n","import { PageProps, graphql } from \"gatsby\";\n\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Rules from \"../components/rules\";\nimport React from \"react\";\n\nconst RulesPage: React.FC<PageProps> = ({ location }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout>\n      <Seo title={t(\"title\")} pathname={location.pathname} />\n\n      <Rules edition={2023} />\n    </Layout>\n  );\n};\n\nexport default RulesPage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(\n      filter: { ns: { in: [\"common\", \"rules\"] }, language: { eq: $language } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["li","ol","_ref","edition","t","useTranslation","sections","returnObjects","_jsxs","className","id","_jsx","styles","map","item","index","title","details","index2","location","Layout","children","Seo","pathname","Rules"],"sourceRoot":""}